on:
  workflow_call:
    inputs:
      terraform-version:
        required: false
        type: string
        default: '1.5.1'
      terragrunt-version:
        required: false
        type: string
        default: '0.42.2'
      terragrunt-working-dir:
        required: true
        type: string
      environment:
        required: true
        type: string
      log-level:
        required: false
        type: string
        default: 'INFO'
    secrets:
      GH_TOKEN:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  TERRAFORM_VERSION: ${{ inputs.terraform-version }}
  TERRAGRUNT_VERSION: ${{ inputs.terragrunt-version }}
  TERRAGRUNT_WORKING_DIR: ${{ inputs.terragrunt-working-dir }}
  TF_LOG: ${{ inputs.log-level }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_USE_OIDC: true

jobs:
  terragrunt-plan:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install Terraform ${{ env.TERRAFORM_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Setup Terragrunt ${{ env.TERRAGRUNT_VERSION }}
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: ${{ env.TERRAGRUNT_VERSION }}

    - name: Terragrunt Format
      run: |
       terragrunt run-all fmt --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Init
      run: |
       terragrunt run-all init --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Validate
      run: |
       terragrunt run-all validate --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Plan
      run: |
       terragrunt run-all plan --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

  terragrunt-apply:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: terragrunt-plan
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Terraform ${{ env.TERRAFORM_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Setup Terragrunt ${{ env.TERRAGRUNT_VERSION }}
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: ${{ env.TERRAGRUNT_VERSION }}

    - name: Terragrunt Format
      run: |
       terragrunt run-all fmt --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Init
      run: |
       terragrunt run-all init --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Validate
      run: |
       terragrunt run-all validate --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }}

    - name: Terragrunt Apply
      run: |
       terragrunt run-all apply --terragrunt-working-dir ${{ env.TERRAGRUNT_WORKING_DIR }} --terragrunt-non-interactive
